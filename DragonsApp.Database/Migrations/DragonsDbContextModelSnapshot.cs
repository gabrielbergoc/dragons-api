// <auto-generated />
using System;
using DragonsApp.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DragonsApp.Database.Migrations
{
    [DbContext(typeof(DragonsDbContext))]
    partial class DragonsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DragonsApp.Models.Dragon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dragons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 21, 22, 40, 33, 141, DateTimeKind.Unspecified).AddTicks(2710), new TimeSpan(0, -3, 0, 0, 0)),
                            LastModifiedAt = new DateTimeOffset(new DateTime(2023, 1, 21, 22, 40, 33, 141, DateTimeKind.Unspecified).AddTicks(2751), new TimeSpan(0, -3, 0, 0, 0)),
                            Name = "Toothless",
                            Title = "The Great One Without Teeth"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 21, 22, 40, 33, 141, DateTimeKind.Unspecified).AddTicks(2755), new TimeSpan(0, -3, 0, 0, 0)),
                            LastModifiedAt = new DateTimeOffset(new DateTime(2023, 1, 21, 22, 40, 33, 141, DateTimeKind.Unspecified).AddTicks(2757), new TimeSpan(0, -3, 0, 0, 0)),
                            Name = "Fafnir",
                            Title = "The Greedy One With Riches"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 21, 22, 40, 33, 141, DateTimeKind.Unspecified).AddTicks(2760), new TimeSpan(0, -3, 0, 0, 0)),
                            LastModifiedAt = new DateTimeOffset(new DateTime(2023, 1, 21, 22, 40, 33, 141, DateTimeKind.Unspecified).AddTicks(2761), new TimeSpan(0, -3, 0, 0, 0)),
                            Name = "Smaug",
                            Title = "The Desolation of Greediness"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 21, 22, 40, 33, 141, DateTimeKind.Unspecified).AddTicks(2764), new TimeSpan(0, -3, 0, 0, 0)),
                            LastModifiedAt = new DateTimeOffset(new DateTime(2023, 1, 21, 22, 40, 33, 141, DateTimeKind.Unspecified).AddTicks(2765), new TimeSpan(0, -3, 0, 0, 0)),
                            Name = "Rex",
                            Title = "The Great Friend"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 21, 22, 40, 33, 141, DateTimeKind.Unspecified).AddTicks(2767), new TimeSpan(0, -3, 0, 0, 0)),
                            LastModifiedAt = new DateTimeOffset(new DateTime(2023, 1, 21, 22, 40, 33, 141, DateTimeKind.Unspecified).AddTicks(2769), new TimeSpan(0, -3, 0, 0, 0)),
                            Name = "Adaman",
                            Title = "The Strong One"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 21, 22, 40, 33, 141, DateTimeKind.Unspecified).AddTicks(2771), new TimeSpan(0, -3, 0, 0, 0)),
                            LastModifiedAt = new DateTimeOffset(new DateTime(2023, 1, 21, 22, 40, 33, 141, DateTimeKind.Unspecified).AddTicks(2773), new TimeSpan(0, -3, 0, 0, 0)),
                            Name = "Margoneth",
                            Title = "The One I Invented"
                        });
                });

            modelBuilder.Entity("DragonsApp.Models.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DragonId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DragonId");

                    b.ToTable("Histories");
                });

            modelBuilder.Entity("DragonsApp.Models.History", b =>
                {
                    b.HasOne("DragonsApp.Models.Dragon", "Dragon")
                        .WithMany("Histories")
                        .HasForeignKey("DragonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dragon");
                });

            modelBuilder.Entity("DragonsApp.Models.Dragon", b =>
                {
                    b.Navigation("Histories");
                });
#pragma warning restore 612, 618
        }
    }
}
